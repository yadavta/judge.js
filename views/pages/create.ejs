<!DOCTYPE html>
<html>
<head>
    <%- include ("../partials/header.ejs") %>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
</head>

<body>


  <%- include ("../partials/nav.ejs") %>

<section class="section">
    <div class="container">
    <form id="createTournamentForm">
        <div class="field">
            <label>Colloquial Tournament Name</label>
            <input class="input is-primary is-rounded" id="informalName" type="text" placeholder="informal tourney name">
        </div>
        <div class="field">
          <label>Official Tabroom Name</label>
          <input class= "input is-primary is-rounded"  id="formalName" type="text" placeholder="tab tourney name">
        </div>
        <div class="field">
            <label>Start Date</label>
            <input type="text" name="startDateCalendar" value="" id="startDate"/>
        </div>
        <div class="field">
            <label>End Date</label>
            <input type="text" name="endDateCalendar" value="" id="endDate"/>
        </div>
        <div class="field">
            <label style="margin-right:2rem">Applicable Circuits</label>
            <input type="checkbox" id="localCircuitCheckbox" value="" style="padding-left:1rem;padding-right:1rem"> Local Circuit </input>
            <input type="checkbox" id="natCircuitCheckbox" value="" style="padding-left:1rem;padding-right:1rem"> National Circuit </input>
        </div>
    </form>
    </div>
</section>

  <script>
  // setting up basic variables
  let userTournamentID = "";
  let userTournamentName = "";
  let userTabroomName = "";
  let userCircuits = [];
  let userJudges = [];
  let userSchoolApproved = false;
  let userAsIndependent = false;
  let currentYear = new Date().getFullYear();
  let userStartDate = "";
  let userEndDate = "";

  //date picker js stuff
  $(function() {
      $('input[name="startDateCalendar"]').daterangepicker({
          singleDatePicker: true,
          showDropdowns: true,
          minYear: 2019,
          maxYear: 2030
      }, function(start, end, label) {
          userStartDate = start.format("YYYY-MM-DD");
          //console.log(userStartDate);
      });
  });

  $(function() {
      $('input[name="endDateCalendar"]').daterangepicker({
          singleDatePicker: true,
          showDropdowns: true,
          minYear: 2019,
          maxYear: 2030
      }, function(start, end, label) {
          userEndDate = start.format("YYYY-MM-DD");
          //console.log(userEndDate);
      });
  });

  // neccessary bits for form functionality
    //calendar date picker
/*

    // getting user inptu via jquery
    $('#submitButton').click(function() {

      userTournamentName = $('#informalName').val();
      userTabroomName = $('#formalName').val();
      userTournamentID = userTournamentName.toLowerCase() + currentYear;

      if($('#natCircuitCheckbox').prop('checked')) {
        userCircuits.push("national");
      }
      if ($('#localCircuitCheckbox').prop('checked')) {
        userCircuits.push("local");
      }

      if($('#parentsJudgesCheckbox').prop('checked')) {
        userJudges.push("parents");
      }

      if($('#hiresJudgesCheckbox').prop('checked')) {
        userJudges.push("hires")
      }

      if($('#schoolApprovedToggleBox').prop('checked')) {
        userSchoolApproved = true;
      }
      if($('#asIndependentToggleBox').prop('checked')) {
        userAsIndependent = true;
      }

      //dates are stored as ISO 8601 format to ensure compatibility with MongoDB query
      let userStartDate = $('#rangestart').calendar('get date');
      let userEndDate = $('#rangeend').calendar('get date');

      axios.post("/createTournament", {
        _id: userTournamentID,
        tournamentName: userTournamentName,
        tabroomName: userTabroomName,
        circuits: userCircuits,
        judgeTypes: userJudges,
        schoolApproved: userSchoolApproved,
        asIndependent: userAsIndependent,
        startDate: userStartDate,
        endDate: userEndDate
      })
      .then(function (response) {
          console.log(response);
      })
      .catch(function (error) {
          console.log(error);
      });

  });*/

  </script>
</body>

</html>
